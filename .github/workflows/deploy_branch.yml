name: Deploy Staging Branch

on:
    # Run this workflow on creation (or sync to source branch) of a new pull request
    pull_request:

jobs:
  deploy_staging_branch:
    runs-on: ubuntu-latest
    steps:
    - uses: actions/checkout@v2
    - uses: azure/login@v1
      with:
          creds: ${{ secrets.AZURE_STATIC_SITES }}

    - name: Node.js build
      id: build
      uses: actions/setup-node@v1
      with:
        node-version: '14.x'
    - run: npm install
    - run: npm run _build-production

    - name: Upload to blob storage
      id: upload
      uses: azure/CLI@v1
      with:
        creds: ${{ secrets.AZURE_STATIC_SITES }}
        inlineScript: |
            az storage blob upload-batch \
              --account-name zooniversestatic \
              --content-cache-control 'public, immutable, max-age=604800' \
              --destination '$web/preview.zooniverse.org/pfe-lab/pr-${{ github.event.number }}' \
              --source ./dist
            az storage blob upload \
              --account-name zooniversestatic \
              --content-cache-control 'public, immutable, max-age=60' \
              --container-name '$web' \
              --name 'preview.zooniverse.org/pfe-lab/pr-${{ github.event.number }}/index.html' \
              --file ./dist/index.html

    - name: Slack notification
      uses: 8398a7/action-slack@v3
      env:
        SLACK_WEBHOOK_URL: ${{ secrets.SLACK_WEBHOOK_URL }}
        STAGING_URL: 'http://pr-${{ github.event.number }}.lab-preview.zooniverse.org'
      with:
        channel: '#bot-playground'
        status: custom
        fields: repo,message,commit,author,action,eventName,ref,workflow,job,took
        custom_payload: |
          {
            attachments: [{
              color: '${{ job.status }}' === 'success' ? 'good' : '${{ job.status }}' === 'failure' ? 'danger' : 'warning',
              "mrkdwn_in": ["text"],
              "pretext": "${ process.env.AS_WORKFLOW } finished in ${ process.env.AS_TOOK }",
              "author_name": "${ process.env.AS_AUTHOR }",
              "author_link": "https://github.com/${ process.env.AS_AUTHOR }/",
              "author_icon": "https://github.com/${ process.env.AS_AUTHOR }.png?size=40",
              "title": "${{ github.event.title }}",
              "title_link": "${{ github.event.url }}",
              "text": "\"${ process.env.AS_MESSAGE }\"",
              "fields": [
                  {
                      "title": "$STAGING_URL",
                      "value": "$STAGING_URL",
                      "short": false
                  },
                  {
                      "title": "Triggered by",
                      "value": "${ process.env.AS_EVENT_NAME }",
                      "short": true
                  },
                  {
                      "title": "Run Link",
                      "value": "$GITHUB_SERVER_URL/$GITHUB_REPOSITORY/actions/runs/$GITHUB_RUN_ID",
                      "short": true
                  }
              ],
              "thumb_url": "https://raw.githubusercontent.com/zooniverse/Brand/master/style%20guide/logos/zooniverse-emblem/zooniverse-logo-teal.png",
              "footer": "<https://github.com/zooniverse/${ process.env.AS_REPO }|zooniverse/${ process.env.AS_REPO }> #$GITHUB_RUN_ID",
              "footer_icon": "https://www.zooniverse.org/favicon.ico"
            }]
          }
      if: always()

# Azure logout
    - name: logout
      run: |
            az logout
